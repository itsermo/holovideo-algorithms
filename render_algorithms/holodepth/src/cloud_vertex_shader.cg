// This is C5E1v_basicLight from "The Cg Tutorial" (Addison-Wesley, ISBN
// 0321194969) by Randima Fernando and Mark J. Kilgard.  See page 111.

void C5E1v_basicLight(float4 position  : POSITION,

				float3 normal    : NORMAL,
				float4 texCoord  :TEXCOORD0,
				float4 normCoord :TEXCOORD1,
				float4 color: COLOR,

				out float4 oPosition : POSITION,
				out float4 oTexCoord  :TEXCOORD0,
				out float3 oNormal: TEXCOORD1,
				out float4 oColor:COLOR,
				out float4 oColor1:COLOR1,
				uniform float4x4 modelViewProj,
				uniform float modelUIScale)
	  //    uniform int frontback)
{
//float n=-400 ,f=-600;
//float n=-450, f=-750;
float n=-400, f=-800; //near and far clip plane distances 
float z;  
float scale = 140.*modelUIScale;
float4 truePosition;
if(position.z != 1.0)
{
	float exponent = 1.5; //gamma
	float col = pow(position.w/255.0,exponent);
	oColor = float4(col,col,col,col);
	//oColor.w = 0.0;
	//oColor.r = 0.0;
	//oColor.g = 0.0;
	//oColor.b = 0.0;
	truePosition = float4(-position.x*scale,-position.y*scale,position.z*scale,1.0);
}
else
{
	oColor = float4(0.,0.,0.,0.);
//	oColor=color;
	truePosition = position;
}
oPosition = mul(modelViewProj, truePosition);
//float y=oPosition.y*70+35;
//float z=oPosition.z*100+500;

//z=-0.5*(f-n)*oPosition.z-0.5*(n+f);
z=((f-n)*oPosition.z+n);
 //oPosition.y=oPosition.y/z;
// oPosition.y=oPosition.y/oPosition.z;
//z= (oPosition.z+1.0)*0.5+1.;

//oPosition.y=oPosition.y*500/z;



//THESE TWO LINES ARE ACTIVE IN QUINN's CODE
//oPosition.y=oPosition.y*(0.5*(n+f))/(z); 
//oPosition.x=oPosition.x*(0.5*(n+f))/(z); //normalization by z may not be correct
//THESE TWO LINES ARE ACTIVE IN QUINN's CODE



//oPosition.y=oPosition.y*(0.5*(n+f))/(z+600);
//oPosition.x=oPosition.x*(0.5*(n+f))/(z+600);

// oPosition.y=oPosition.y*(oPosition.w)/(oPosition.w+500);
  oNormal=normal;
  oTexCoord=texCoord;


oTexCoord.z=oPosition.z;
 
}
